// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"character-data-microservice/models"
)

// GetClassOKCode is the HTTP code returned for type GetClassOK
const GetClassOKCode int = 200

/*GetClassOK Returns players class

swagger:response getClassOK
*/
type GetClassOK struct {

	/*
	  In: Body
	*/
	Payload *models.Class `json:"body,omitempty"`
}

// NewGetClassOK creates GetClassOK with default headers values
func NewGetClassOK() *GetClassOK {

	return &GetClassOK{}
}

// WithPayload adds the payload to the get class o k response
func (o *GetClassOK) WithPayload(payload *models.Class) *GetClassOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get class o k response
func (o *GetClassOK) SetPayload(payload *models.Class) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClassOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetClassDefault Generic error response

swagger:response getClassDefault
*/
type GetClassDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetClassDefault creates GetClassDefault with default headers values
func NewGetClassDefault(code int) *GetClassDefault {
	if code <= 0 {
		code = 500
	}

	return &GetClassDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get class default response
func (o *GetClassDefault) WithStatusCode(code int) *GetClassDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get class default response
func (o *GetClassDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get class default response
func (o *GetClassDefault) WithPayload(payload *models.Error) *GetClassDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get class default response
func (o *GetClassDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClassDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
