// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetClassHandlerFunc turns a function with the right signature into a get class handler
type GetClassHandlerFunc func(GetClassParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetClassHandlerFunc) Handle(params GetClassParams) middleware.Responder {
	return fn(params)
}

// GetClassHandler interface for that can handle valid get class params
type GetClassHandler interface {
	Handle(GetClassParams) middleware.Responder
}

// NewGetClass creates a new http.Handler for the get class operation
func NewGetClass(ctx *middleware.Context, handler GetClassHandler) *GetClass {
	return &GetClass{Context: ctx, Handler: handler}
}

/*GetClass swagger:route GET /class/{playerId} getClass

GetClass get class API

*/
type GetClass struct {
	Context *middleware.Context
	Handler GetClassHandler
}

func (o *GetClass) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetClassParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
