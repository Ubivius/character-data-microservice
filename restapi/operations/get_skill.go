// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetSkillHandlerFunc turns a function with the right signature into a get skill handler
type GetSkillHandlerFunc func(GetSkillParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetSkillHandlerFunc) Handle(params GetSkillParams) middleware.Responder {
	return fn(params)
}

// GetSkillHandler interface for that can handle valid get skill params
type GetSkillHandler interface {
	Handle(GetSkillParams) middleware.Responder
}

// NewGetSkill creates a new http.Handler for the get skill operation
func NewGetSkill(ctx *middleware.Context, handler GetSkillHandler) *GetSkill {
	return &GetSkill{Context: ctx, Handler: handler}
}

/*GetSkill swagger:route GET /skill/{skillId} getSkill

GetSkill get skill API

*/
type GetSkill struct {
	Context *middleware.Context
	Handler GetSkillHandler
}

func (o *GetSkill) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetSkillParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
